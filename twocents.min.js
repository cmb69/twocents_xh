/**
 * Copyright 2014-2025 Christoph M. Becker
 *
 * This file is part of Twocents_XH.
 *
 * Twocents_XH is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Twocents_XH is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Twocents_XH.  If not, see <http://www.gnu.org/licenses/>.
 */

// @ts-check

var init;

var conf;

/**
 * @param {string} url 
 */
function doGetRequest(url) {
    var request = new XMLHttpRequest();
    request.open("GET", url);
    request.setRequestHeader("X-CMSimple-XH-Request", "twocents");
    request.onreadystatechange = (function onreadystatechange(event) {
        var request = event.currentTarget;
        if (request.readyState === 4 && request.status === 200) {
            document.querySelectorAll(".twocents_container").forEach(function (container) {
                container.innerHTML = request.responseText;
                init();
                container.className = container.className.replace(/ twocents_loading$/, "");
            });
            if (history.state.twocents_url !== url) {
                let state = Object.assign({}, history.state, {"twocents_url": request.responseURL});
                history.pushState(state, document.title, request.responseURL);
            }
        }
    });
    request.send(null);
    document.querySelectorAll(".twocents_container").forEach(function (container) {
        container.className += " twocents_loading";
    });
}

/**
 * @param {string} url
 * @param {string} payload
 * @returns {void}
 */
function doPostRequest(url, payload) {
    var request = new XMLHttpRequest();
    request.open("POST", url);
    request.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    request.setRequestHeader("X-CMSimple-XH-Request", "twocents");
    request.onreadystatechange = (function (event) {
        var request = event.currentTarget;
        if (request.readyState === 4 && request.status === 200) {
            document.querySelectorAll(".twocents_container").forEach(function (container) {
                container.innerHTML = request.responseText;
                container.className = container.className.replace(/ twocents_loading$/, "");
            });
            init();
            if (request.responseURL !== url) {
                let state = Object.assign({}, history.state, {"twocents_url": request.responseURL});
                history.pushState(state, document.title, request.responseURL);
            }
        }
    });
    request.send(payload);
    document.querySelectorAll(".twocents_container").forEach(function (container) {
        container.className += " twocents_loading";
    });
}

/**
 * @returns {void}
 */
function ajaxifyPagination() {
    document.querySelectorAll(".twocents_pagination a").forEach(function (anchor) {
        anchor.onclick = (function (event) {
            doGetRequest(event.currentTarget.href);
            return false;
        });
    });
}

/**
 * @returns {void}
 */
function ajaxifyAdminTools() {
    var currentButton;
    document.querySelectorAll(".twocents_admin_tools form button").forEach(function (button) {
        button.onclick = (function (event) {
            currentButton = event.currentTarget;
        });
    });
    document.querySelectorAll(".twocents_admin_tools form").forEach(function (form) {
        form.onsubmit = (function (event) {
            if ("confirm" in currentButton.dataset) {
                var confirmed = window.confirm(JSON.parse(currentButton.dataset.confirm));
                if (!confirmed) {
                    return false;
                }
            }
            var params = [];
            Array.prototype.forEach.call([event.currentTarget.xh_csrf_token, currentButton], function (element) {
                params.push(encodeURIComponent(element.name) + "=" + encodeURIComponent(element.value));
            });
            doPostRequest(currentButton.formAction, params.join("&"));
            return false;
        });       
    });
}

/**
 * @returns {void}
 */
function convertAnchorsToButtons() {
    const selector = ".twocents_admin_tools a, .twocents_new_comment a, .twocents_form_buttons a";
    document.querySelectorAll(selector).forEach(function (anchor) {
        var button = document.createElement("button");
        //button.type = "button";
        button.setAttribute("type", "button");
        button.onclick = (function () {
            doGetRequest(anchor.href);
            return false;
        });
        button.innerHTML = anchor.innerHTML;
        anchor.parentNode.replaceChild(button, anchor);
    });
}

/**
 * @param {HTMLFormElement} form
 * @returns {string}
 */
function serialize(form) {
    var params, pairs, prop;

    params = {};
    form.querySelectorAll("[name]").forEach(function (element) {
        params[element.name] = element.value;
    });
    pairs = [];
    for (prop in params) {
        if (params.hasOwnProperty(prop)) {
            pairs.push(encodeURIComponent(prop) + "=" +
                        encodeURIComponent(params[prop]));
        }
    }
    return pairs.join("&");
}

/**
 * @returns {void}
 */
function prepareForm() {

    /**
     * @param {HTMLFormElement} form
     * @returns {boolean}
     */
    function update(form) {
        form.querySelectorAll(".twocents_editor").forEach(function (editor) {
            form.querySelectorAll("textarea").forEach(function (textarea) {
                textarea.value = editor.innerHTML;
            });
        });
        return true;
    }
    
    document.querySelectorAll(".twocents_form").forEach(function (form) {
        conf = JSON.parse(form.dataset.config);
    });
    document.querySelectorAll(".twocents_form_buttons button").forEach(function (button) {
        if (button.name === "twocents_do") {
            button.form.onsubmit = (function (event) {
                update(event.currentTarget);
                doPostRequest(event.currentTarget.action, serialize(event.currentTarget));
                return false;
            });
        } else if (button.type === "reset") {
            button.onclick = (function (event) {
                var form = event.currentTarget.form;
                document.querySelectorAll(".twocents_editor").forEach(function (editor) {
                    editor.innerHTML = form.elements.twocents_message.value;
                });
            });
        }
    });
}

/**
 * @param {HTMLTextAreaElement} textarea
 * @returns {void}
 */
function makeEditor(textarea) {
    var div, button, div2, buttons, prop;

    var updateButtonStates = (function () {
        var button, state;

        button = document.querySelector("#twocents_tool_bold");
        button.disabled = !document.queryCommandEnabled("bold");
        state = document.queryCommandState("bold");
        button.style.borderStyle = state ? "inset" : "";
        button = document.querySelector("#twocents_tool_italic");
        button.disabled = !document.queryCommandEnabled("italic");
        state = document.queryCommandState("italic");
        button.style.borderStyle = state ? "inset" : "";
        button = document.querySelector("#twocents_tool_link");
        button.disabled = !document.queryCommandEnabled("createLink");
        button = document.querySelector("#twocents_tool_unlink");
        button.disabled = !document.queryCommandEnabled("unlink");
    });

    div2 = document.createElement("div");
    div2.className = "twocents_editor_toolbar";
    div = document.createElement("div");
    div.className = "twocents_editor";
    div.innerHTML = textarea.value;
    textarea.parentNode.parentNode.appendChild(div2);
    textarea.parentNode.parentNode.appendChild(div);
    textarea.style.display = "none";
    buttons = ({
        bold: (function () {
            document.execCommand("bold");
            div.focus();
            updateButtonStates();
        }),
        italic: (function () {
            document.execCommand("italic");
            div.focus();
            updateButtonStates();
        }),
        link: (function () {
            var url = window.prompt(conf.message_link, "");
            if (url) {
                document.execCommand("createLink", false, url);
            }
            div.focus();
            updateButtonStates();
        }),
        unlink: (function () {
            document.execCommand("unlink");
            div.focus();
            updateButtonStates();
        })
    });
    for (prop in buttons) {
        if (buttons.hasOwnProperty(prop)) {
            button = document.createElement("button");
            button.id = "twocents_tool_" + prop;
            //button.type = "button";
            button.setAttribute("type", "button");
            button.innerHTML = conf["label_" + prop];
            button.onclick = buttons[prop];
            div2.appendChild(button);
        }
    }
    div.contentEditable = true;
    div.onkeypress = (function () {
        var textContent = div.textContent || div.innerText;
        if (!textContent) {
            document.execCommand("formatBlock", false, "P");
        }
    });
    div.onkeyup = updateButtonStates;
    div.onmouseup = updateButtonStates;
    textarea.required = false;
    textarea.parentNode.onclick = (function () {
        div.focus();
    });
    updateButtonStates();
}

/**
 * @returns {boolean}
 */
function isRteSupported() {
    var div = document.createElement("div");
    return (typeof div.contentEditable !== "undefined" &&
            typeof document.execCommand !== "undefined");
}

/**
 * @returns {void}
 */
init = function () {
    ajaxifyPagination();
    convertAnchorsToButtons();
    ajaxifyAdminTools();
    prepareForm();
    if (conf && conf.comments_markup === "HTML") {
        if (isRteSupported()) {
            document.querySelectorAll("textarea[name='twocents_message']").forEach(function (textarea) {
                makeEditor(textarea);
            });
        }
    }
};

let state = Object.assign({}, history.state, {"twocents_url": location.href});
history.replaceState(state, document.title, location.href);
window.addEventListener("popstate", function (event) {
    if ("state" in event && "twocents_url" in event.state) {
        doGetRequest(event.state.twocents_url);
    }
});

init();
